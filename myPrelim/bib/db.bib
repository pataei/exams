% Journals
@string{JFP   = {{Journal of Functional Programming (JFP)}}}
@string{JVLC  = {{Journal of Visual Languages and Computing (JVLC)}}}
@string{TOPLAS = {{ACM Trans.\ on Programming Languages and Systems (TOPLAS)}}}
@string{TOSEM = {{ACM Trans.\ on Software Engineering and Methodology (TOSEM)}}}

% Conferences
@string{DSL   = {{IFIP Working Conf.\ on Domain-Specific Languages (DSL)}}}
@string{DTM   = {{ASME Int.\ Design Engineering Technical Conf.\ \& Computers and Information in Engineering Conf. (IDETC/CIE)}}}
@string{ECOOP = {{European Conf.\ on Object-Oriented Programming (ECOOP)}}}
@string{GPCE  = {{ACM SIGPLAN Int.\ Conf.\ on Generative Programming: Concepts and Experiences (GPCE)}}}
@string{GTTSE = {{Generative and Transformational Techniques in Software Engineering (GTTSE)}}}
@string{ICFP  = {{ACM SIGPLAN Int.\ Conf.\ on Functional Programming (ICFP)}}}
@string{ICSME = {{IEEE Int.\ Conf.\ on Software Maintenance and Evolution (ICSME)}}}
@string{Onward = {{ACM SIGPLAN Symp.\ on New Ideas in Programming and Reflections on Software (Onward!)}}}
@string{SLE   = {{Int.\ Conf.\ on Software Language Engineering (SLE)}}}
@string{VLHCC = {{IEEE Int.\ Symp.\ on Visual Languages and Human-Centric Computing (VL/HCC)}}}

% Workshops
@string{FOSD  = {{Int.\ Work.\ on Feature-Oriented Software Development (FOSD)}}}
@string{FoSER = {{ACM SIGSOFT Workshop on the Future of Software Engineering Research}}}
@string{Mutation = {{Int.\ Work.\ on Mutation Analysis (Mutation)}}}
@string{VaMoS = {{Int.\ Work.\ on Variability Modelling of Software-Intensive Systems (VaMoS)}}}

% Series
@string{LNCS  = {{LNCS}}}


@article{bln86acmcs,
author = {Batini, C. and Lenzerini, M. and Navathe, S. B.},
title = {A Comparative Analysis of Methodologies for Database Schema Integration},
year = {1986},
issue_date = {Dec. 1986},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {18},
number = {4},
issn = {0360-0300},
url = {https://doi.org/10.1145/27633.27634},
doi = {10.1145/27633.27634},
abstract = {One of the fundamental principles of the database approach is that a database allows a nonredundant, unified representation of all data managed in an organization. This is achieved only when methodologies are available to support integration across organizational and application boundaries.Methodologies for database design usually perform the design activity by separately producing several schemas, representing parts of the application, which are subsequently merged. Database schema integration is the activity of integrating the schemas of existing or proposed databases into a global, unified schema.The aim of the paper is to provide first a unifying framework for the problem of schema integration, then a comparative review of the work done thus far in this area. Such a framework, with the associated analysis of the existing approaches, provides a basis for identifying strengths and weaknesses of individual methodologies, as well as general guidelines for future improvements and extensions.},
journal = {ACM Comput. Surv.},
month = dec,
pages = {323?364},
numpages = {42}
}

@InProceedings{bqr07cmer,
author="Bolchini, Cristiana
and Quintarelli, Elisa
and Rossato, Rosalba",
editor="Parent, Christine
and Schewe, Klaus-Dieter
and Storey, Veda C.
and Thalheim, Bernhard",
title="Relational Data Tailoring Through View Composition",
booktitle="Conceptual Modeling - ER 2007",
year="2007",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="149--164",
abstract="This paper presents a methodology to derive views over a relational database by applying a sequence of appropriately defined operations to the global schema. Such tailoring and composition process aims at offering personalized views over the database schema, so as to improve its ability to support the new needs of customers, support evolutionary software development, and fix existing legacy database design problems. The process is driven by the designer's knowledge of the possible operational contexts, in terms of the various dimensions that contribute to determine which portions of the global schema are relevant with respect to the different actors and situations. We formally introduce some operators, defined on sets of relations, which tailor the schema and combine the intermediate views to derive different final views, suitable for the different envisioned situations. The application to a case study is also presented, to better clarify the proposed approach.",
isbn="978-3-540-75563-0"
}

@article{parsons02jmis,
author = { Jeffrey Parsons    },
title = {Effects of Local Versus Global Schema Diagrams on Verification and Communication in Conceptual Data Modeling},
journal = {Journal of Management Information Systems},
volume = {19},
number = {3},
pages = {155-183},
year  = {2002},
publisher = {Routledge},
doi = {10.1080/07421222.2002.11045730},

URL = { 
        https://doi.org/10.1080/07421222.2002.11045730
    
},
eprint = { 
        https://doi.org/10.1080/07421222.2002.11045730
    
}

}

@article{sp94tkde,
  title={View Integration: A Step Forward in Solving Structural Conflicts},
  author={S. Spaccapietra and C. Parent},
  journal={IEEE Trans. Knowl. Data Eng.},
  year={1994},
  volume={6},
  pages={258-274}
}